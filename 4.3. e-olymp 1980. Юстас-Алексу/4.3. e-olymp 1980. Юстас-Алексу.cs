/* Юстас-Алексу
После блестяще проведенной операции Штирлиц смог определить численность фашистской армии. Естественно такую информацию уже четыре года
как ждут в штабе советской армии. Чтобы общаться со штабом Штирлиц использует n радистов. Каждый из радистов должен передать сообщение 
от Штирлица в штаб. Штирлиц, как хитрый разведчик, зашифровал свое послание таким образом: каждому из радистов он дал одно и 
то же число - численность армии, но в своей системе счисления, да еще так, что все основания систем счисления у радистов попарно 
взаимно простые. После передачи радиограммы ищейки Мюллера смогли определить последний символ каждого из сообщений. 
Вы работаете штатным программистом и должны определить, какое минимальное число мог послать Штирлиц в своем сообщении. 
Мюллер в отличие от вас не очень любит бинарный код, поэтому он хочет, чтобы искомое число вы вывели в десятичной системе.
Входные данные
В первой строке задается число n - количество радистов у Штирлица. В следующей строке находятся n чисел ai - основания систем счисления, 
в которых Штирлиц давал сообщения радистам (2 ≤ ai ≤ 36 ). В третьей строке через пробел записано n символов ci - последние буквы 
каждого из сообщений (0 ≤ ci < ai; ci - либо цифра от 0 до 9, либо буква от A до Z).
Выходные данные
Вывести минимальное число, которое мог передать Штирлиц в десятичной системе счисления.
 */
using System;

namespace _4._3._e_olymp_1980._Юстас_Алексу //by TheSkyMaks
{
    class Program
    {
        static long Gcdext(long a, long b, ref long d, ref long x, ref long y)
        {
            if (b == 0)
            {
                d = a;
                x = 1;
                y = 0;
                return x;
            }
            Gcdext(b, a % b, ref d, ref x, ref y);
            long s = y;
            y = x - a / b * s;
            x = s;
            if (x < 0)
            {
                x = b + x;
            }
            return x;
        }
        static void Main()
        {
            int.TryParse(Console.ReadLine(), out int Number);
            string[] sNumberSystem = Console.ReadLine().Split(' ');
            string[] splitString = Console.ReadLine().Split(' ');
            int[,] Arr = new int[2, Number];
            long M = 1;
            for (int i = 0; i < Number; ++i)
            {// O(Number)
                int.TryParse(sNumberSystem[i], out Arr[0, i]);
                char.TryParse(splitString[i], out char Symbol);
                Arr[1, i] = Symbol < 'A' ? (Symbol - '0') : (Symbol - 'A' + 10);
                M *= Arr[0, i];//Вычисляем m = П a(i)
            }
            //При помощи алгоритма Гаусса находим минимальное число, которое мог передать Штирлиц.
            long Res = 0;
            for (long I = 0; I < Number; I++)
            {// O(Number)
                long Bi1 = M / Arr[0, I];
                //Mi1 = Bi1 % Arr[0, I];
                long d = Bi1, x = 1, y = 0;
                long Mi1 = Gcdext(Bi1, Arr[0, I], ref d, ref x, ref y);
                Res = (Res + Arr[1, I] * Bi1 * Mi1) % M;
            }
            Console.WriteLine(Res);
        }
    }
}// O(2 x Number)